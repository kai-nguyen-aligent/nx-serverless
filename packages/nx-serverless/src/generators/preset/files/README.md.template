# Aligent AWS microservices template using Typescript and Serverless Framework

A template for developing a suite of AWS microservices using Typescript and [Serverless Framework](https://www.serverless.com/framework/docs).

The monorepo workspace is managed using [Nx.](https://nx.dev)

## Development

### Working with services

Services are generated by our `@aligent/nx-serverless` plugin. It supports generating services based on our predefined template and some executors as described below.

#### Service generator (for generating new service)

`npx nx g service <service-name>`

#### Service executors

Our service executors are `lint`, `test`, `build`, `deploy` and `remove`. Executor can be executed using the command in the format:

`npx nx run <service-name>:<executor> -- --<options>` or `npx nx <executor> <service-name> -- --<options>`

- To deploy a service to AWS:

  `npx nx deploy <service-name> -- -s <stage-name> --aws-profile <profile-name> --verbose`

- To remove a service from AWS:

  `npx nx run <service-name>:remove -- -s <stage-name> --aws-profile <profile-name> --verbose`

### Working with libraries

Libraries are generated by `@nx/js` plugin. For more information, check out their [document](https://nx.dev/packages/js).

#### Generate a shared library

`npx nx g library <library-name>`

### General Nx. commands

Below are some example of general Nx. commands. For more information, check out their [document](https://nx.dev/packages/nx/documents).

- Remove a service or library:

  `npx nx g rm <project-name>`

- To run executors (`lint`, `test`, `format`, etc..) for all the projects:

  `npx nx run-many -t <list-of-executors-separated-by-space-or-comma>`

- To run executors for only affected projects:

  `npx nx affected -t <list-of-executors-separated-by-space-or-comma>`
